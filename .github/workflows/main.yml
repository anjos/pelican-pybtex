# SPDX-FileCopyrightText: Copyright © 2024 André Anjos <andre.dos.anjos@gmail.com>
# SPDX-License-Identifier: MIT

name: build
on:
  - push
  - pull_request
env:
  PYTEST_ADDOPTS: --color=yes
permissions:
  contents: read
jobs:
  qa:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate links in Markdown files
        uses: JustinBeckwith/linkinator-action@v1
        with:
          retry: true
          linksToSkip: https://pypi.org/project/pelican-pybtex/
      - name: Set up Python ${{ matrix.python-version }} & Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.34.0
          cache: true
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
      - name: Run qa
        run: pixi run -e qa qa
  test:
    name: Test - Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "39"
          - "310"
          - "311"
          - "312"
          - "313"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} & Pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.34.0
          cache: true
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}
      - name: Run tests
        run: pixi run -e test${{ matrix.python-version }} test
  deploy:
    name: Deploy
    environment: Deployment
    needs:
      - qa
      - test
    runs-on: ubuntu-latest
    if: github.ref=='refs/heads/main' && github.event_name!='pull_request'
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Check release
        id: check_release
        run: |
          python -m pip install autopub
          autopub check
      - name: Publish
        if: ${{ steps.check_release.outputs.autopub_release=='true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          autopub prepare
          autopub commit
          autopub build
          #autopub githubrelease
    # - name: Upload package to PyPI
    #   if: ${{ steps.check_release.outputs.autopub_release=='true' }}
    #   uses: pypa/gh-action-pypi-publish@release/v1
